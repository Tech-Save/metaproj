// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// .DS_Store
// api.txt
// api_test.txt
// configlocaldb.txt
// generate.txt
// main.txt
// sqlname.txt
// sqlname2.txt
package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_Ds_store,
		".DS_Store",
	)
}

func Ds_store() (*asset, error) {
	bytes, err := Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1582475885, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x5f\x6f\xda\x30\x10\x7f\x4e\x3e\xc5\x4d\xea\x03\xa9\xaa\xe4\x9d\x25\x48\x0c\x36\x69\x0f\xab\xba\xb2\x3d\x4d\xd3\x64\x92\x03\xa2\x39\x8e\xe7\x5c\x06\x14\xf1\xdd\x27\xdb\x49\x08\xd0\xd0\x52\x5a\xed\x2d\xbe\xdc\xdd\xef\xcf\xf9\xe4\x20\x18\x96\x94\xc3\x1c\x05\x2a\x46\x98\xc0\x32\xa5\x05\x7c\x41\x62\x43\x99\xc2\x82\x48\x16\xfd\x20\x98\xa7\xb4\x28\xa7\x7e\x9c\x67\x01\xae\xd6\x0f\x0f\xeb\x20\x43\x62\x4c\xa6\xae\x64\xf1\x6f\x36\x47\x08\x43\xf0\xef\xaa\xef\xc1\xc0\x75\xf5\xf9\x73\x26\x73\x45\xf5\x51\x31\x31\x47\xb8\x4a\x45\x82\xab\x1b\xb8\x22\x36\xe5\x08\xfd\x08\xfc\x6f\xfa\xab\xd0\x69\x41\x30\x52\xc8\x08\xc1\x84\xdc\x59\x29\x62\xb0\x11\x13\x08\xc3\xaa\xcc\x1f\x31\x79\xcb\x32\x8d\xd4\x4b\xa6\x70\x5d\xfc\xe1\xfe\xf8\x83\x07\x3d\x54\x0a\x50\xa9\x5c\x79\xb0\x71\x9d\x5f\x37\xfa\x00\x11\x24\x53\xff\xe3\x0a\xe3\x5d\xfd\x58\xe5\xd2\xb4\x9c\x10\x23\xcc\x50\x18\x96\x4e\x3a\x33\x05\xef\x22\x10\x29\xd7\x1d\x1c\x85\x54\x2a\xe1\x3a\xdb\x53\xdd\x5a\x14\xf7\xfb\x55\xd5\x5b\xd7\x0d\x02\x0d\xd9\xd6\xd5\x50\x78\x73\x55\x6d\x16\x13\x52\x65\x4c\x2e\xad\xa5\x19\xd9\x0e\x78\x92\x8a\x79\x05\x0e\x85\x49\x82\x8d\xbb\xcb\xb0\x75\x9f\x52\xe4\x89\x99\x94\x69\x66\x75\x5b\x39\xbd\x56\x6e\xab\xd5\x75\x17\x88\x57\x0d\xb6\xeb\xff\xbe\x03\x0a\x8b\x92\x53\x27\x63\xeb\xc8\xce\xa2\x82\x32\xb2\xb1\xbe\xb1\xe9\x4e\xa1\x64\x0a\x0f\x27\x76\xc6\xf0\x13\x9c\xa1\x02\xdd\xd7\x1f\xf1\xbc\xc0\x9e\xe7\x3a\x76\x0a\x26\xf6\xb5\x44\xb5\xbe\xcf\x97\x87\x08\x26\x7e\x34\x84\x7b\x24\x95\xe2\xdf\x17\x3b\x57\xd7\xbf\x89\x77\x55\x7a\xd4\x59\xb0\xd9\xd6\xd2\x93\xe9\x23\xc2\x6b\x72\xdd\x77\xb0\xce\x18\x72\x6e\x1d\x68\x05\x9e\x5e\x86\x5d\x46\xed\xd4\x8f\x9f\xcf\xd6\x96\x2f\x8b\xf6\xbd\x30\xec\x8f\xa9\x0f\x39\x3f\xe3\x6a\xcc\x72\x05\xba\xb1\x7f\x8b\x2b\xea\x79\xd5\x6f\x63\x62\xff\xb4\x8b\x75\xdf\xc8\xd4\xb7\xae\x41\xcc\xc4\x90\x73\x18\x0c\xde\x1f\xe2\x36\xc0\x1a\xd9\x39\xf6\x22\x02\x26\x25\x8a\xe4\xd8\xa6\x1b\xb0\xa4\x3c\x43\xda\x10\x6e\x6e\x72\x7b\x3a\xdf\x65\x72\xc1\x52\xdb\xea\xff\xb3\xd4\x16\xfb\xb2\xa5\x7e\x62\xab\x2d\xc4\xe3\x5b\x3d\x46\x8e\x2f\x37\xce\x56\x3f\xcf\xb8\x33\x7d\xb1\xad\x2f\xf5\xa5\x79\x76\x4c\xfc\xe0\xe1\x31\x08\xa7\x6c\x69\x76\xbd\x39\x76\x49\x2d\x5e\x41\x6b\x7b\x81\x5f\x4b\xed\xde\x9e\x84\x21\xa0\x48\xb4\xd6\x7f\x01\x00\x00\xff\xff\xac\x1f\x93\x53\x40\x09\x00\x00")

func apiTxtBytes() ([]byte, error) {
	return bindataRead(
		_apiTxt,
		"api.txt",
	)
}

func apiTxt() (*asset, error) {
	bytes, err := apiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.txt", size: 2368, mode: os.FileMode(420), modTime: time.Unix(1582830093, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_testTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x6d\x6f\xe3\x36\xf2\x7f\x6d\x7d\x8a\xa9\xd0\x14\x52\xd7\x2b\x77\xfb\xff\xdf\x1b\x37\x36\x90\x26\x5e\x74\xef\x9a\x87\x8b\xbd\xed\xe1\x72\xc1\x82\x96\xc6\x0e\x2f\x32\xa9\x90\x54\x9c\x34\xc8\x77\x3f\x0c\x29\xc9\x72\x2c\x3f\xc4\xd9\xc3\xa1\x7d\xd1\x58\x7c\x98\xf9\xcd\xf0\x37\xc3\x19\xb6\x9d\xce\x51\x6e\x24\x4c\x51\xa0\x62\x06\x13\x98\x73\x73\x03\xa7\x68\xd8\x51\xc6\xe1\xc6\x98\x4c\x77\x3b\x9d\x29\x37\x37\xf9\x38\x8a\xe5\xac\x83\x0f\x8f\x7f\xfc\xf1\xd8\x99\xa1\x61\x2c\xe3\x5e\xc6\xe2\x5b\x36\x45\x38\x3c\x84\xe8\xa2\xf8\xdd\xef\x7b\x1e\x9f\x65\x52\x19\x08\xbc\x96\x9f\x30\xc3\xc6\x4c\x63\x47\xdf\xa5\xbe\xd7\xf2\x51\xc4\x32\xe1\x62\xda\xf9\xb7\x96\x82\x06\x26\x33\x43\x7f\x52\x39\xa5\x3f\x52\xd3\xbf\x15\x4e\x52\x8c\xed\xb8\x36\x8a\x8b\xa9\x1d\x35\xa8\x0d\x17\x76\x99\xe1\x33\xf4\xbd\xd0\xf3\xee\x99\x02\x1a\x3f\x19\xc3\xf7\xfa\x2e\x8d\x4e\x7e\xb6\x43\xb1\x14\x13\x3e\x4d\xc6\x30\x63\xd9\x95\x13\x71\xcd\x85\x41\x35\x61\x31\x3e\x3d\x7b\xb1\x14\xda\x14\x1b\xcf\xd8\x0c\xa1\x07\x56\x3c\x19\xf2\x91\xa7\x78\xa1\x70\xc2\x1f\xa0\xdf\xf7\x3d\xaf\xd3\x81\x9e\xfb\x07\x6e\x30\xcd\x50\x69\x1a\x63\x5a\xe7\x33\xd4\xc0\x0a\x5d\xa9\x8c\x59\x9a\x8c\x23\x32\x0b\x26\x3c\x45\x60\xba\xeb\x75\x3a\x4f\xb4\x1f\x00\xfc\x5f\xa4\x36\x7e\x17\x7c\xbb\xf0\x86\x3e\xda\xe5\xd4\x85\x54\x76\xea\x2f\xff\xff\x7f\x3f\x2e\x46\x3f\x6b\x54\x34\x9a\x8c\x05\x9b\x61\x6d\x35\xd3\xba\x69\x9c\xec\x68\x1a\x1f\x0e\x7f\x3d\x95\x89\x9b\xe2\x9a\x8d\x53\xf4\xbd\x4e\xe7\xd9\x9b\xe4\x22\x86\x54\xb2\xe4\xd8\x1a\x10\x84\xf0\xe4\xb5\x26\x33\x13\x5d\x28\x2e\x4c\x2a\x02\x1f\x6a\xd3\x7e\xe8\xb5\xc8\xac\x36\xa0\x52\xd0\xed\x81\xd4\xd1\x79\x86\x22\xf0\x57\xed\xa7\xb5\x7c\x62\x17\x7e\xd3\x03\xc1\x53\x92\xdc\x4a\xe5\x34\xba\x60\x82\xc7\x24\xfa\x98\x09\x21\x0d\xc8\x0c\xc5\xb2\x03\xad\xef\x7c\xab\x25\x1a\x28\x25\x55\x10\x86\x5e\xeb\xd9\x6b\x25\x18\xcb\x04\xad\x6a\xd2\x11\x9d\xe1\xfc\xc4\x0d\x05\xb4\x25\xf4\x5a\xa4\xaf\x07\xc5\xba\xc8\x4d\x06\xdf\x95\x54\xd8\x19\xd3\x14\x0d\x58\x30\x05\xb0\x5c\x31\xc3\xa5\x20\x68\x4a\xce\xd6\xe1\x7b\xf6\x9c\x43\x63\x85\xcc\xe0\xc9\x38\x48\x2a\x46\xb6\x21\x71\x24\x73\x44\x6c\x83\x9c\x0b\x54\xc5\x57\x08\x01\x61\x42\x12\x65\x4f\x40\x6b\x32\x91\xce\x61\x98\xd1\x41\x4c\x02\xff\xf8\x72\x70\x34\x1a\xc0\xc9\xd1\xe8\xe8\xe7\xa3\xe1\x00\x0e\x34\x9c\xff\x7e\x36\xb8\x84\x03\xed\x97\xc2\x0b\xa9\xe1\xca\x11\xfa\xf0\x0e\xb4\x0e\xbd\xd6\x17\x77\x74\x3d\x48\xc6\xd1\xe0\x01\xe3\xc0\x8e\x2a\x34\xb9\x12\x15\x7c\x8d\x66\xf4\xc7\x12\xfa\x5d\x00\x0e\x07\x23\x18\x7d\x3a\x1d\xc0\x3f\xcf\xcf\x06\xf0\x79\x74\xec\xbf\x15\x47\xa2\x64\xb6\xc9\x89\xbb\xa0\x3a\xb9\x3c\xbf\xa8\x3b\xad\xf2\xd5\x5b\xc1\x29\x39\x1f\x3c\x70\x6d\xf4\x12\xbe\xbb\x1c\xd5\x63\x75\xc6\x4c\x4d\x35\x44\x51\x54\xcb\x3a\x84\xd9\x6e\x83\xb1\x94\xa9\x53\xb4\x30\xc0\x6d\x5f\x71\xec\xaf\x83\xe3\x11\x0c\xfe\xf1\x69\x38\x1a\x42\x70\xa0\x43\xbf\x50\xd4\x6c\x43\x39\x55\xd9\xf0\x77\x1a\xb8\x94\xf3\xc0\xce\x38\x58\x51\x14\x85\xd1\x30\x66\x22\xf8\xce\xe1\x59\xb5\xd0\x50\x9a\x68\xb0\xd1\x8e\x2f\x8e\xe0\x9e\xa5\x3c\x69\xb2\xc6\x6b\xd9\xa9\xd2\x99\x75\x87\xb5\xa1\xb4\xea\x03\x7c\xbc\x3c\x3f\x85\x6c\xfa\xc5\x8a\xd5\xf0\xfb\x2f\x83\xcb\x81\xd3\x21\x5c\x52\xfe\xf6\x83\x5f\x28\x5d\xc5\xc8\x05\x37\x23\x9b\xc1\x83\x15\x36\xd4\xd3\x9a\xd7\xca\xf4\x5d\xfa\x49\x4c\xe4\x0a\x43\x28\x0d\xf7\x0e\x34\xd0\x6d\x45\x7f\x73\x8d\xca\x7e\x33\xad\xe7\x52\x25\xf4\xdb\x7f\xe7\xb5\x5a\xbe\xd6\xe9\x4c\x26\xd8\xb3\x2c\x2a\x53\xca\x95\x4b\xea\xd7\xf5\x11\x9b\xcb\x97\x46\x6c\x1e\x5f\x5e\x43\x19\x7c\x69\xa4\xcc\xd1\xd7\xa1\xd7\x72\xb7\x52\xe9\x3a\xf2\xbc\xcb\xb3\x99\xd4\x66\xaa\x90\x00\x94\x06\xad\x3a\x85\x1c\x72\xca\xb8\x08\x66\xf0\x7d\x71\x5f\x46\xa7\xd6\x25\x9d\x0e\x7d\x53\x80\xe7\x99\x23\x48\xb7\xb7\xe4\xc3\xad\xf9\x31\x76\xf9\x71\xb1\x07\x1a\xf2\x60\xc9\xbd\x2a\x0f\x96\xe6\x2c\x2e\xdb\x55\xe7\x44\x41\x41\xa9\x9d\x41\x1c\x17\xe2\x37\x41\x28\x73\x99\xd3\xbc\xb3\xe8\x62\x5b\xb3\xe4\x4e\x47\xe5\xc2\xda\xa2\xbd\x16\x3e\x70\xf3\x1b\x4b\xc9\x91\xb3\xe8\x32\x17\x41\xe8\x55\x7e\x36\xc8\x54\x22\xe7\xa2\x8a\x45\x97\xd0\x56\xbd\xb1\x33\xae\x13\x2b\xa1\x09\x56\x4b\xea\x68\xf0\xc0\x4d\x50\x00\x0a\x89\x0e\xe6\x31\x43\x88\xe5\x2c\x63\x0a\x47\xf4\x9b\xf8\x11\xd4\xd2\x51\x1b\x96\x72\x13\x45\x71\x41\x22\x21\x8f\xdd\xbe\x40\xa1\xce\x53\xd3\x06\x7c\xc8\x30\x36\xab\x1b\x96\x4a\x86\x09\x65\xa1\x6a\x6f\x17\x0e\xee\xdb\x70\x70\x0f\xef\x01\x0e\x46\x6d\x38\x18\xc1\xbf\x84\xdf\x86\x65\x91\x2f\xbf\x2b\x46\x43\x60\x54\x8e\xe1\xe2\x42\xc0\x09\xcb\x53\xb3\x3f\xb0\x65\x01\x6f\x46\xe7\x26\xa0\xd7\xab\xa6\x4a\xa4\x54\x9d\xec\x0f\xb3\xb6\x7b\x5f\x8c\xc4\xc1\xa2\x0c\xc5\x34\xd1\x10\x33\x01\x63\x04\x26\x1e\x41\x2a\x2a\xa1\xd8\xc4\xa0\x82\x64\x0c\xce\x98\x36\x68\x09\x0a\x59\x42\xf8\x64\x63\xc9\x0c\x4c\x24\x90\x4a\x79\x0b\x94\x3c\x9c\xc2\x53\x96\x59\xe6\xb3\x5b\x0c\x9a\xcb\xec\xb0\xca\x33\xb6\x62\xfb\x2c\x66\x4c\xe9\x1b\x96\x06\x57\xd7\xe3\x47\x53\x7a\x67\x11\xfc\x6d\xf8\xae\x12\xbd\x39\x2c\x28\xdd\x3b\xea\x3b\xa3\x77\xc6\xb2\x0e\x8a\x13\xb3\x04\xa5\x92\xbc\x23\x14\xaf\x35\x91\x0a\x6e\xdb\x70\x4f\x50\x14\x13\x53\x84\x05\x3a\xda\xc3\x27\x70\x4f\x32\x2a\x23\xaf\x6e\xaf\xed\xc4\x12\x07\xfe\x86\x8f\xee\xe4\x2f\xed\x32\xf7\x7b\x60\x05\xd1\x6f\xbf\x4d\x3a\xea\x22\xda\x70\x1f\x92\x90\x82\x9a\x13\x96\x6a\xf4\x5a\xe4\x9c\xe7\x8a\xaf\x14\x4c\x8b\x22\xcf\x1a\xf9\x0a\x8e\x96\x47\xfe\x57\x2d\x45\xd5\x00\x58\x47\x9e\x16\x6e\x74\xf3\xaf\x3b\xb4\xf5\xd2\xaa\x68\xdb\x49\xda\x72\x00\x2d\x19\xb7\x2e\x84\xdc\xa2\x60\x61\x55\x58\x8d\x2d\xb0\x85\x1b\xc2\xbf\x68\x4b\xa3\x91\xe2\xb3\x61\xc6\x62\x0c\x56\x45\x86\x94\x1d\xd6\x2e\xac\xe9\x09\x6d\xf2\xe8\x74\xb8\xb1\x6d\x38\x98\x1b\x25\xf3\xe9\x0d\x20\x8b\x6f\x5c\x10\x83\x9c\x90\xa4\x3c\x36\x36\x12\x59\x96\xa5\x8f\x60\x6e\xaa\x04\x6f\x93\x3b\x75\x29\x60\x64\x7d\x1b\x75\xde\x09\x48\xb1\x74\x11\xcc\x58\xe6\x78\x80\x77\x39\x4b\x3f\xd2\xc2\x0d\x24\x68\xdb\xbd\x44\xe1\x5a\x60\xd5\xc4\x85\xae\xec\xb2\x2c\xc9\x2d\xf3\x5d\xf3\x1e\xfd\xc6\xd2\x1c\xcf\x27\x8b\xc3\xbc\x6f\x9a\xad\x88\x43\xf7\xd5\xf9\x64\x48\x6b\xf2\x88\x04\xdb\xdb\x94\x42\x8a\xd3\xd8\x0f\x3f\x01\x87\x43\xc8\xa3\xb3\x7c\xe6\x20\x87\x3f\x01\x7f\xf7\xce\xea\x25\x9e\x7c\x13\x14\x38\xaf\x0a\x49\x91\x5b\xc6\xc3\x88\xae\xd9\xeb\x30\xb8\x5f\x8c\x7c\x2a\xed\x0b\xc2\x36\xe4\x8d\xe3\xa1\x8b\xcc\x32\xa8\x66\xc6\x5d\xb9\x93\xc0\xb7\xab\xbb\x70\xa0\x37\x84\x68\x23\x86\x36\xbc\x12\xc2\xcb\x28\x16\x3c\x25\xa6\x78\x9d\x4e\x51\x88\x67\x18\xf3\x09\x8f\xc1\xf3\x0e\x0f\x8b\x94\xf3\x2d\x17\x09\x3e\xb4\xe1\x5b\xb7\xa4\xdb\x83\x68\xe4\xca\xeb\x7e\xbf\x78\xf7\x38\x3c\x2c\x66\x2d\x2a\xe8\xf7\xed\x47\xf9\x0e\xb2\x32\x6b\xdf\x40\x6c\x51\x93\x30\xc3\xe0\x3d\x08\x69\xb0\x0b\x89\xcc\x49\xc1\x58\xb1\xf8\x16\x8d\x06\xee\xea\x22\xb7\x48\x20\x26\xa0\x89\xef\x30\x46\x33\x47\x14\x20\xcd\x0d\xaa\x39\xd7\x08\x44\x58\xcb\xb0\x4c\xa1\xc1\x04\x98\x06\x83\xb3\x2c\x25\xee\x33\x4b\xe3\xea\x5d\x67\x01\xe6\x98\x65\x43\x2e\xa6\x05\x26\xe8\xc1\xd5\x8f\xd7\xeb\x66\x9f\x6a\x26\xda\x52\x95\x20\x7d\x80\x7e\xbf\xdd\x34\xf1\x23\xc9\x7b\x76\x6f\x49\x79\x96\x30\x83\x1b\xb4\xae\x9b\x5a\xa3\x90\x5c\xf7\x32\x46\x75\xf1\x44\x65\x47\x97\xe4\x2d\xd4\x34\xc7\xda\x93\x57\x5b\xee\x86\x4f\x59\xf6\xd1\x5d\xf3\xfd\xbe\xcb\x22\xd5\x6b\x95\xad\x52\xbb\x6b\x11\x97\xcd\x2c\xde\xa3\xd2\x8d\x38\x82\x15\x2a\xc0\xd5\x5a\x9f\x87\x55\x4d\xb4\x69\xcd\x53\x3d\xa6\x53\x14\xab\x2a\x42\x78\x0f\x1f\x28\xd8\xfb\x2e\xe8\xdf\xbf\xb7\x81\x58\xd6\x5b\x94\xfb\x50\x2c\x12\xd6\xca\xfe\x2b\x7e\x1d\xd6\x62\x66\xa9\x33\x72\x5d\x83\x0d\x87\x46\x7b\xcd\xa2\x69\x1a\xad\x3e\x87\xf5\x7a\x5b\xf6\xfb\xa1\x57\x55\x3c\x5b\x55\xad\x6f\x4a\x16\x99\x66\xa9\xd9\x59\x2b\xcb\x76\xfe\x2f\x7a\x02\xc0\x54\xa3\x95\xf6\xe2\x95\xe0\x44\x0a\xec\x6e\x93\xe8\x97\xd7\x34\xf5\xec\xd5\x15\x5d\x7f\x14\x28\xfb\x98\xf5\xa9\x64\x37\xd3\x6a\x32\x9b\xcc\xb0\x32\xbe\x29\x5e\x4d\x96\x05\xd4\xd1\x34\x90\xc8\x9d\x3e\x26\x30\x57\x52\x4c\x41\x1b\x66\x72\x0d\xb1\x4c\xb0\x0b\x53\x69\xa8\x26\x98\x33\x61\x5c\xb6\x2e\x0d\x75\x2d\xc7\x56\xef\xd5\x54\xfb\x4b\x8f\x7f\x0b\x8e\xad\x8b\x80\x1d\x29\xb6\x6e\xbb\x65\x58\x75\x57\x17\xc7\xb2\x21\x4d\x5e\xfd\x70\x1d\x6d\x03\xf4\x6a\x22\xae\xcd\x8e\xfb\xf2\x70\x83\xb5\xb5\x76\xbe\xa1\x5a\xd9\x62\x7a\x7b\x53\x92\xdd\x62\x31\xcb\xf8\x82\x43\xb9\x70\x45\x0c\x26\x45\x45\x18\x35\x92\xb5\x4e\x83\x4b\x34\x8a\xe3\xfd\xfe\x44\xd8\x26\x60\x1f\x2a\x6c\x07\xf5\x0a\x32\x6c\x13\xb6\x07\x1d\x76\xb0\xd9\xe6\xa5\x3f\x31\x1f\x8e\xd2\x74\xaf\xab\x67\xcb\x7e\xcb\x86\x2f\xbb\x11\xe1\xc3\x9f\x3f\x27\xbc\x24\xfe\x56\xef\xee\xc1\xeb\x35\xb2\xde\x40\xeb\xf5\x67\x57\xbe\x2d\xba\x5a\x0c\xc6\x18\xb3\x9c\x0a\xe5\x8c\x03\xd7\x70\x32\x18\x1e\xb7\xe1\xaa\x7b\x4d\x1f\x3a\xe5\x31\x52\x3f\xc8\xd2\x14\x98\x52\xec\x11\x30\xc5\x19\x0a\xf7\x22\x69\xdb\x37\xdb\x67\xad\x2f\xeb\x36\xb2\xa3\x4b\xe5\x93\x2d\xd1\xda\xf0\xe5\xe5\x4b\x86\xb5\x71\x4d\xf8\x5d\xf1\xeb\xb2\x7f\xb4\x3f\x37\xc7\x5a\xc3\x49\xbc\x29\xda\xac\x07\x9f\x3d\xdb\x1e\x55\x41\xf7\x79\x63\x35\xbf\x35\xe6\x36\x6f\x6f\x4a\xc0\x9b\xdb\x87\x68\x1b\x9e\x57\xb0\x74\xb3\xa8\x3d\x48\xba\xd5\xd8\x8d\x99\x77\xb3\xe1\xff\xcb\xc4\x7b\x82\x29\xbe\x81\x03\x9b\xb7\xd7\x2b\xfe\x6d\x97\xef\x36\x20\xaf\x38\xfc\xcd\xa2\xf6\x38\xfc\xad\x56\xd2\xe1\x57\xff\x6d\xf4\xab\x97\x19\xbd\xd7\x1f\xbc\xab\xe2\x2f\xe5\xdc\x95\xf1\x67\xf2\x52\xce\xfd\x65\x4b\x17\xc2\xf5\x5d\x4a\x62\xed\x22\xfd\xe2\xc5\xf5\x35\xf5\x87\xfb\xff\x63\x84\x2c\x30\xf8\x36\xef\x2c\x14\x7e\x95\x1a\xc9\xbd\xf8\xac\x32\x78\xdf\xc2\x61\xe3\xee\x3a\x7f\xb7\xa8\x79\x35\x3d\xbf\xde\xfd\xb9\xcd\x84\x37\x14\x04\xff\xad\x8a\xc0\xca\x4d\x51\x94\xef\x9b\xd0\x87\x1f\xbe\x36\xbf\xf7\xa9\x35\x1a\x18\x4c\x64\x3b\x3c\x04\x14\x09\xf4\xfb\xff\x09\x00\x00\xff\xff\xc8\x7f\x27\x3e\x12\x26\x00\x00")

func api_testTxtBytes() ([]byte, error) {
	return bindataRead(
		_api_testTxt,
		"api_test.txt",
	)
}

func api_testTxt() (*asset, error) {
	bytes, err := api_testTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_test.txt", size: 9746, mode: os.FileMode(420), modTime: time.Unix(1582911790, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configlocaldbTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xf2\xc8\x2f\x2e\x51\xb2\x52\x50\xca\xc9\x4f\x4e\xcc\xc9\x00\x71\x74\x20\x12\x01\xf9\x45\x60\x09\x53\x13\x63\x23\x98\x58\x68\x71\x6a\x11\x48\xac\xba\x5a\x41\x2f\xa0\x28\x3f\xcb\x2f\x31\x37\x55\xa1\xb6\x16\xae\x25\xb1\xb8\x18\x8f\x34\x88\x8b\x47\x3a\x38\xd8\xc7\x37\x3f\x05\xac\x22\x25\xb3\x38\x31\x29\x27\x55\x89\xab\x16\x10\x00\x00\xff\xff\xa7\xbe\x44\xac\xa6\x00\x00\x00")

func configlocaldbTxtBytes() ([]byte, error) {
	return bindataRead(
		_configlocaldbTxt,
		"configlocaldb.txt",
	)
}

func configlocaldbTxt() (*asset, error) {
	bytes, err := configlocaldbTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "configlocaldb.txt", size: 166, mode: os.FileMode(420), modTime: time.Unix(1582911461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3b\x6b\x73\xda\x48\xb6\x9f\xd1\xaf\x38\xd3\xb5\x37\x2b\xad\x19\x81\x1d\xaf\x93\x4b\x85\xa9\x22\x20\x3b\x64\x6d\xec\x01\x9c\x79\x18\x57\xd2\x48\x8d\xe9\x89\x1e\xa4\xbb\x15\xdb\xc3\xf8\xbf\xdf\xea\x87\x84\x24\x63\x1b\x26\x49\xdd\xac\x6b\x6a\x90\xfa\xf4\x79\xf6\x79\xe9\x48\x59\x60\xff\x23\xbe\x22\xb0\x5c\x82\x7b\x66\xae\xef\xee\x2c\x8b\x46\x8b\x84\x09\xb0\xad\x1a\x22\xb1\x9f\x04\x34\xbe\x6a\xfc\xc1\x93\x18\xc9\x05\xc6\x12\xc6\xe5\x55\x98\x5c\xc9\x9f\x08\x8b\x79\x83\xe1\x38\x90\x37\x8c\xcc\x42\xe2\x0b\x79\x29\x68\x44\x90\x65\xd5\xd0\x2c\x52\xf7\x34\x69\xd0\x24\x15\x34\x94\x37\x89\xa2\xc0\x05\xf3\x93\xf8\xb3\xb9\xa4\xf1\x95\x5a\x15\xe4\x46\x34\x04\x89\x16\x21\x16\x92\x82\x63\x59\xe2\x76\x41\xa0\x9b\x84\x69\x14\x03\x17\x2c\xf5\x05\x2c\xad\xda\x00\x47\x04\x34\xa2\x55\x1b\xcb\x2d\xe6\xe6\xce\x60\x8c\xf1\x34\x24\x55\x04\x80\x1c\xe7\xe7\x94\xb0\xdb\xc2\xbd\xe6\xc0\xe1\xe2\x52\x5f\xe5\x84\x46\x02\x0b\x72\x82\xfd\x39\x8d\x8b\xf4\x0e\xab\x04\xbb\x29\x53\x5b\x81\xc6\xc2\xaa\x29\xf6\x1c\x00\x2e\x2e\xd5\xa5\x24\x37\x4b\x63\x1f\x86\x04\x07\xa3\x13\xdb\x01\x9b\x47\xf0\xaf\x22\xf1\x3a\x10\xc6\x40\xd9\xd8\x91\x1c\xa6\xb7\x82\x70\xbd\xd8\x6a\x83\xb6\x9f\x2b\xd1\x3b\x61\x68\x27\xdc\x1d\x89\x80\xc6\x8e\x55\xa3\x33\xb5\xe7\x87\x36\xc4\x34\x94\x88\x35\x46\x44\xca\x62\xab\x76\x67\xd5\x24\xa4\x0d\xf2\x00\xdd\xf3\x38\xc2\x8c\xcf\x71\x68\x1b\xca\xcf\x78\xe4\x58\xd9\xe6\x3b\xcb\x6a\x34\x8e\x48\x4c\x98\xd4\x01\x73\x9e\x46\x84\x83\x98\x63\x01\x62\x4e\x60\xc1\x68\x84\xd9\x2d\xf4\x7b\x40\x39\xd0\x58\x2d\xce\x28\xe3\x02\x7c\x7d\x36\x36\x8d\x03\x72\x03\x4d\x47\xeb\x99\x91\xb2\x03\x81\xa5\x49\x08\x9b\x61\x9f\x2c\xef\xea\x20\x6e\xc4\x21\x0d\xb3\x03\x73\xb4\xc6\xb0\xb4\xac\xda\x67\xcc\x80\x47\x25\x8b\xeb\xc5\x05\x23\x33\x7a\x93\x9b\x5a\xed\x4b\x67\xc5\xa5\x46\x03\x66\x91\x70\xcf\x18\x8d\x45\x18\xdb\xe8\xc8\x1b\x78\xc3\xce\xd8\x6b\x01\xaa\x83\xf1\x4c\x57\xfa\xc9\xe9\x4c\x4a\xe4\xb8\xf2\xf8\x6c\x47\x9b\xef\x61\x38\xb4\xdb\x80\x8a\xf2\x20\x65\x60\x1e\x41\x1b\x02\x81\x5d\xbb\x08\x73\x2c\xab\x26\xc9\xf1\xc8\xd5\xde\x21\x91\x35\x82\xb1\x32\xd8\x3a\x84\xdc\x01\xb9\xb6\xd1\x20\x81\x99\x34\x44\x8c\x23\x82\xa4\x28\xf2\xc0\x6a\x46\xd7\xb6\x22\x43\x43\x72\xa6\xee\x6d\x47\x1d\x27\x9d\xe5\xe6\xfb\x21\x27\x1e\x24\x42\x7a\x88\x09\x23\xb7\x2f\xcf\xc1\x36\xdb\xea\x80\x5c\xe4\x68\xb9\xe4\xbe\x9f\xa0\xa9\x05\x32\xf6\x6b\x67\xf4\x2e\x5a\x41\x22\x2e\xa5\x0c\x40\x42\x4e\xd6\x6f\x52\x22\x4a\x8e\x84\x2b\x96\x46\xd6\x1d\x40\xef\xaf\xcc\x79\x07\xef\x11\xec\x64\xa7\xb3\x03\xc8\xbd\x4a\x90\x42\xc1\x62\x9d\x2f\x4b\xaa\x36\x72\x1b\x12\xc9\x30\x31\xd2\x56\x7c\x3a\xb3\x20\x61\xcc\x18\xca\x2c\x64\x8c\x15\x25\xc5\xe5\x19\x8f\xea\x20\x45\xd4\x36\x33\xfb\x62\x1a\xe6\x41\x58\xc2\xc9\xd2\x0d\x67\x3e\x5c\x5c\xca\xd8\xa8\x43\x80\xab\x5e\xab\x54\xae\xba\x6c\x4d\x28\x33\x64\x14\xdc\x93\x94\x8b\x9c\x9e\x3e\x64\x79\xc2\xc8\x71\x7b\x24\xa4\x11\xb7\xd1\xab\x57\xa8\x0e\xe8\xa7\x9f\x90\xe3\x9e\x61\xc6\x89\xad\x49\x16\x85\x70\xa4\x2b\xcc\xd4\xd9\x19\x7b\x25\xdc\xed\x32\xa2\x82\x49\x6b\xf5\x50\xc8\x6b\xeb\xe4\x61\x2f\x84\xeb\xdd\x10\x3f\x15\xc4\xd6\xf4\xa4\x5a\x86\xb8\xdb\x0d\x13\x4e\xec\x3c\x01\x28\x54\x95\x04\xda\xe6\xcf\x68\x0b\x73\x12\x2e\x08\xe3\x12\xc4\xe7\x49\x1a\x06\x90\x72\xd2\x82\xb9\x10\x0b\xde\x6a\x34\xae\xa8\x98\xa7\x53\xd7\x4f\xa2\xc6\x34\xc4\x1f\x09\x89\xa6\x8c\xdc\x36\x16\x61\xca\x70\x48\xff\x24\xda\xe2\x9c\xc6\x57\x69\x88\x19\xfd\x93\xd8\x3c\xb7\xa3\xe1\xb0\x54\x1a\x65\xfe\xfb\x06\xf3\x91\x72\x1f\x3b\x5b\x19\x27\xc7\xc9\x35\x61\x36\x77\xea\x80\x38\x72\x8a\x1a\xe7\x7b\x18\x8d\x9e\x40\xb3\x8a\xbe\x5d\x45\xcf\xf7\x4a\xfb\x65\x7e\xe2\xe3\x05\x15\x4a\x8b\xb5\x42\x57\x69\x50\x11\x12\x49\x21\x43\x0f\x25\xc9\x4d\x91\x57\x02\xa8\x53\x90\x40\x0e\x3c\x9d\x46\x54\xc8\xa8\xc2\x42\xfa\x63\x02\xa3\x6c\xa5\x23\xea\x80\xe3\x00\x12\x31\x27\xec\x9a\x72\x52\x90\x96\x67\xe2\x47\x64\x53\xe1\x87\x64\x11\x62\x9f\xc8\xda\x52\xd1\xe7\x91\x0d\x45\x03\xbf\x97\x8e\x0d\xc8\x71\xd4\x4f\x1d\x10\x5a\x19\xc2\x4f\xa2\x08\xdb\x54\x6a\x50\x87\x90\xc4\x57\x62\x2e\xaf\x2b\x0e\x40\xe1\x15\xd8\x06\xfa\x23\xec\x96\x8e\x19\xd5\xd1\xba\xe3\x43\xc8\x1c\x57\xc1\x6d\xb3\x50\x82\x88\x88\x79\x12\x70\x23\xc3\xbd\x7a\xeb\x40\x31\xbd\x16\x44\x59\x9b\x4f\xb3\xa4\x9e\x25\xd4\x35\x65\xa9\x92\x62\x4b\x89\x5c\xa2\x66\x29\xb6\xa0\xc6\xbd\x3d\xc5\x8c\xa5\x81\xb9\x11\xd7\x28\x60\x1a\x37\x7b\xcd\xb9\x26\xdc\x3d\x22\x82\xc4\x9f\x6d\x74\x74\x7a\xd6\xe9\xfe\xa7\x73\xe4\x21\xe3\x5b\xf0\x0b\xa3\x42\x6e\xa7\x02\x44\x02\x53\x02\xe4\x46\x90\x38\x20\xc1\x83\x9c\xfa\xaa\x2d\x2c\x32\x32\x65\xb8\x54\x94\x69\xec\x87\x69\x40\xc6\x34\x22\x30\x4d\x92\xd0\xb2\x6a\xc5\xa5\x36\xcc\x70\xc8\x89\x55\x9b\x25\x0c\xde\xd7\x41\xa8\x1e\xad\xd5\x06\x86\xe3\x2b\x22\x6d\x60\xda\x26\x69\x1a\xb3\xc7\x74\x17\xf9\x26\x85\xe3\x66\xdd\x9a\xae\x52\xd7\x54\xf8\x73\xb3\x53\x15\x71\xbd\xee\x63\x4e\x00\xf5\x3a\x63\x4f\xba\xe3\xb8\x7f\x92\xff\x8e\xc6\x9d\x93\xb3\xd2\xcd\xf8\x77\x79\xdb\x1f\x8c\xbd\xe1\xbb\xce\x31\x6a\x49\xfc\x8a\xec\x82\xa5\xb2\x00\xd6\x02\x32\xc3\x69\x28\xd4\x96\x3b\x5d\x8b\xee\xac\x1a\x87\x9d\x36\xa0\xac\x7b\x9e\xc4\x13\x31\x41\x32\xdd\x4e\x31\x27\x0d\xfe\x29\x9c\xa0\x89\xec\xa1\xf5\xb6\x89\x78\x0f\x13\x54\xc8\x9c\x21\x9d\x36\x16\x9f\xf4\x1e\x1d\x0b\x05\xd6\xaa\xe3\x30\x78\x13\xd5\x5b\x1b\x62\x39\x5b\x07\xad\xe2\x79\xe5\x2f\xda\xbc\xca\xa4\x0e\x8c\x68\x7c\x65\x7a\x9a\xfb\x39\xa0\x90\x9c\xb5\x7d\xe5\x4e\xe7\x01\x4a\x5d\xbc\x78\x88\x50\x21\x5f\xe6\xb9\xaf\x40\xf0\x11\x8a\x8f\x89\x57\xcc\xc2\xeb\x25\x7d\x88\x70\x8f\x25\x0b\x75\xa9\x9c\x39\x22\x71\xc9\x83\x2b\x0e\xac\x4d\x69\x4f\x50\x6f\x78\x7a\x06\xe3\xce\xeb\x63\x0f\xfa\x87\xe0\xfd\xda\x1f\x8d\x47\xa0\x1a\x94\x9c\xa3\xec\x6c\xa0\xdb\x19\x75\x3b\x3d\x6f\xb2\x89\xf9\x75\xfd\xde\x56\x96\x0f\x2b\xae\xfa\x79\x65\x07\xd0\x87\x4d\x0e\x5b\x3d\xa6\x1c\x52\x12\x06\xfc\x7e\xcc\xca\xc7\x9a\x13\xbc\x80\x36\x44\x78\x71\xa1\x81\x97\xfa\x47\xba\x1a\x7a\x7d\x7a\x7a\xec\x75\x06\xa8\x25\x1f\x6f\x00\xc9\x40\x46\xf5\x0c\x60\x56\xcb\x80\xee\x9b\xce\xb0\xdf\xcb\x40\xe6\x81\x4e\x83\xde\x75\x86\x05\x68\x09\x34\xf6\x7e\x1d\x17\xc8\x15\x41\xa3\x93\xce\xf1\x71\x7f\x60\xc0\x88\xc6\x62\xf7\x40\x43\xf2\x45\xc8\x20\xcf\xf7\x72\x88\x77\xe4\x0d\x33\xb1\x0b\x90\xd7\xfd\xa3\x02\x9a\x84\x1c\xec\x17\xf8\x8c\xbc\x61\x5f\xc6\x7c\x89\x4f\xbe\xb8\x8e\x5a\x01\x58\xa4\x76\x78\x7c\xda\x19\xe7\x76\x40\xb3\x30\xc1\x39\x6c\xe8\x75\x8a\xb6\x53\xb0\x8c\xa2\xc2\x7b\x99\xf3\x2a\xc1\x7a\x5e\xb7\x7f\x92\xa3\x96\x69\x0e\xce\x4f\xbc\x61\xbf\xfb\x18\x2c\xb3\x7b\x09\x76\x36\xf4\xba\xfd\x51\xff\x74\x50\x81\x41\xa3\xd1\x3b\x3d\x97\x7e\x9f\xef\x50\x22\xc8\x0c\xba\x12\x5d\x26\x20\x57\x26\x26\x73\x8a\x32\xaf\x3e\x0a\xcd\x12\x6c\xeb\x61\xa8\x16\xa4\x02\x5d\x65\xe3\x7b\xfe\xf1\x76\x74\x3a\x78\xc0\x75\x24\xe8\x75\x0e\x2b\x81\xce\xcf\x57\x4e\x5a\x02\xdd\x55\xe2\xcf\xda\xbc\xfa\x64\x89\x59\x46\x6a\xde\x6f\x99\x52\xa4\xb3\x68\xb6\x47\xa7\x10\x1d\x7b\x17\x85\x62\x75\x99\xef\xf8\x70\x13\x85\xad\x09\x7a\x90\x94\x0c\xff\x09\x52\x4f\xf3\x66\x5b\x9e\x65\xd7\xee\x37\x08\x1f\xd0\x4a\x4e\x53\x36\x9e\xcc\x1f\x98\x3d\x56\xeb\xa5\x75\xe8\xe6\xd6\x51\x9a\x17\x04\xcb\x00\xa6\x2d\x54\x2d\xa1\x5d\x42\x76\x9c\x8d\xc4\xf4\x71\x2c\xfb\xd1\x47\x24\xd5\x02\xb8\x72\xa7\x8d\xb6\x17\xfc\x19\x23\x3c\x0d\x85\xfb\xe4\xe9\x3e\xa9\xca\xc6\x85\x5a\x57\x8a\xad\x0a\x56\x7f\x30\xf2\x86\x63\xe8\x0f\xc6\xa7\xeb\xea\x94\x8d\xac\x2d\x34\x57\x8d\x78\xbb\x9d\xcd\x09\xfc\x24\x16\x34\x4e\x89\x79\xe8\xfe\xc2\x03\x35\x56\x80\x77\x9d\xe3\x73\x6f\x24\x25\xab\xe9\xb1\x51\xab\x0d\xbb\xb9\x90\xef\xbf\x54\xbe\x7f\xe4\x1e\x6f\xc6\x8c\x6e\x5f\x24\x58\x4f\xa8\x36\x3c\x32\x2d\xd7\xce\x4e\x49\xec\xa1\x37\x3e\x1f\x0e\xfa\x83\xa3\xbf\xe1\x4a\x5f\x66\xb2\x2d\x9a\x0c\xd5\x29\x3c\x1d\x13\x5b\x85\xc3\xc6\x4e\xa1\x51\x0b\xdd\xdc\x8e\x7c\x5e\xfa\x8a\xd1\xa3\xae\x0c\x97\x2c\xfc\x9f\x34\xcc\x90\x08\x46\xc9\xe7\xed\xa2\x6a\xe4\x1d\x7b\xdd\x71\x41\x29\x9d\x14\x65\x44\x1d\x0e\x4f\x4f\xd6\x45\xda\x2f\x6f\xbc\xa1\xa7\xe3\x6d\x8d\x5b\x6f\x6d\x66\x63\x9b\xdc\x5e\x8a\x47\x1b\xfe\xa1\x26\x6c\x6b\x1d\x3b\x33\xd4\x44\x3d\x8c\x6f\x7b\x1c\x12\x2a\x6d\xac\x0e\x75\xca\x08\xfe\xb8\x32\xfe\xdf\x35\x79\x27\x0c\xbf\xb5\xd5\x4f\x87\x3d\x6f\x08\xaf\x7f\x83\x2f\xc9\x73\x55\x5b\xaf\xb7\x02\x82\x9e\x37\xea\x6e\x14\x8c\xe7\x8b\x60\xdb\x3c\x7e\x7e\x26\x5b\xad\x75\x2a\x8e\xbc\x71\xc9\xa9\xf6\xbe\x71\x42\x7f\xda\xd3\xf2\xf4\xb8\x55\x04\xaf\x22\xc4\xe8\xf2\xff\x14\x1f\xa5\x4c\x5e\x39\xe8\xef\x30\xb1\x6b\x5f\xfa\x16\x89\xfd\xbb\x4f\xdd\x3d\x12\x92\x2d\xc3\xa8\xe7\x1d\x7b\x63\xef\xfb\x4d\xd2\xeb\xf2\x8a\xb3\x91\x1f\x68\x63\x3c\xe9\x07\x5f\xa4\x0a\xb2\xbf\x5a\xe1\xd8\x48\x9b\x6d\x0b\xc4\xe3\xa7\x7b\xdf\x8c\x8d\xc6\xd8\x1b\x8d\x61\x74\xe6\x75\xfb\x87\xfd\xae\x79\xab\x9b\xbd\x9e\x3c\x94\x62\x49\xd9\x6c\x35\x9b\x2e\x0c\xa5\xcd\x46\x41\xb8\x90\x9b\x78\xe1\xdd\x6f\x86\xdc\xc3\x02\x97\x28\x59\xb5\x6e\x12\x2d\x30\xd3\x90\xc2\x2b\x69\xa9\x4b\x80\x05\xbe\x37\x76\xc9\xc9\x2f\xad\xea\xe0\x65\x39\x4d\x92\x70\x4c\xb8\x90\xc4\xea\x80\xcc\xdc\xd1\x70\x40\x77\x75\xab\x3a\x91\xd9\x04\xa3\x3c\xaa\x59\x6a\x31\x1e\xc3\x81\x46\x63\x40\x48\xc0\xc1\x4f\xb9\x48\x22\x19\xf0\x12\x02\x22\x81\xeb\x84\x7d\x04\xe9\x6c\x38\x0c\xc1\xc7\x9c\x70\xab\x3a\xf0\xd9\x80\x81\x55\x9d\x04\x6d\x86\x53\x1e\x11\x2d\xd5\xe8\xe6\x09\x94\xf2\xec\x68\xa9\x66\x3a\x4f\xa3\x14\x86\x4a\x1b\xa1\x94\xa7\x4d\x1b\xa1\x94\xc7\x50\x4b\x4e\x18\xc5\x4f\x1d\x64\x79\x40\xb5\x19\x4e\x79\x74\xb5\x19\x4e\x79\xa8\xb5\x34\xc3\xa2\xaf\xe9\x31\xe5\xd1\xd8\xd2\x8c\xbf\x36\x11\x2b\x9f\x99\x6d\x88\x54\x1e\xa6\x6d\xa2\x8b\x55\x9d\xb2\x6d\x87\x94\x45\xc1\x37\xb0\x5a\x79\x88\xb7\x21\x87\xfb\xe3\xbd\xca\x74\x6f\x29\x1b\x8d\x02\x11\x1d\x8a\x05\x1a\xf2\xaf\xd1\x48\x79\xf6\xfd\x46\x51\xce\x2b\x22\x00\xb3\x24\x8d\x03\x58\x7c\x92\xf9\x8e\x00\xe5\x5c\xb6\x9a\x95\x29\xe1\x52\xd0\xe8\x31\x2e\x56\x75\x70\xa8\x10\xb8\xc0\xd1\x62\x43\x2c\x6d\x94\x0d\xb1\xca\x83\xc6\x65\x90\x32\x2c\x68\x12\x3f\x71\xc4\xe5\x19\xe4\xf2\x0f\x5e\xc2\x90\xb7\x25\xd3\x4b\x93\x15\x16\x81\xd3\xd8\x27\xf0\x91\xdc\x72\xf0\x71\x0c\x53\x02\x38\xbe\x85\x84\x05\x84\x59\xd5\x29\xa6\x22\x3e\x7d\x90\xba\x55\x1d\x6d\x2e\xd3\x94\x06\x8f\x8a\xff\xc0\x00\x41\x6f\x38\xc1\x8b\xfb\xef\x0e\xbe\x78\x42\xfa\xe4\x60\xb3\x05\xf9\xd8\xc6\xd4\xca\xd2\x98\xd4\x2d\xd6\xd6\x1d\x40\xf5\x0d\x87\x99\x99\x1d\x6c\x49\x94\x06\xd5\x17\xcf\x0c\xc7\x81\x3b\x22\x24\xb0\xd5\xf8\x79\x90\x5c\xdb\x8e\x7b\x1e\xd3\x9b\x01\x8e\x13\xdb\x71\xaa\xdd\x95\x6c\x45\xda\x80\x96\xa6\xcb\xd6\x12\xd2\x60\xcb\x66\x7b\xad\x82\xc5\xbe\xc2\x48\x5b\xcf\x19\x54\x3a\xee\x15\xdf\xc7\x1b\xef\xbb\x75\x5d\x65\xb1\x4f\x28\x98\x65\xc5\xec\x9e\x91\xcc\xe7\x4b\x59\x43\x7b\x98\xb0\x08\x8b\xd7\x49\x12\xda\xca\x7e\xfd\x58\xc4\xf6\x9e\x03\x3f\xb4\xa1\xa9\xde\xc6\xe9\x8f\x3e\x4a\x75\x7c\x2b\x46\x48\x7b\x8b\x24\x3e\xd2\x5f\xc8\xec\x1e\x18\x37\x41\x39\xfd\x52\xcd\xdf\x88\x3c\x9d\xad\x40\xba\xef\x85\x46\x43\x7f\xec\x06\xba\x1a\xae\xbe\x2d\xa8\x28\xdb\x8f\x85\xad\xde\xf5\x18\x46\x4e\x1d\x76\x9b\xce\xda\x8f\x4a\x1e\xc4\x5c\xd9\xea\xf9\xde\x8b\x83\x17\xce\x8a\x46\x41\xa5\x55\x15\xfb\x6f\x52\xe9\xf9\xae\xbd\x5e\x9d\x55\x4d\xfa\xbe\xd5\xc9\x14\x39\x78\x6e\xdf\xd7\xa3\xdc\x29\x6d\xe3\xc9\xa5\x47\x40\x23\x57\x46\xb5\x52\xb3\xbf\x20\x12\x0f\x25\x25\xad\xc2\x20\x61\xd1\xa1\x26\x2c\x15\xf9\xe7\xec\x9f\x75\xf8\x71\xb7\x0e\x07\xfb\x4e\x99\xf1\x96\x7e\xf6\x18\x63\xa3\x88\x16\xe0\x50\x13\x57\xee\x90\x73\x7f\xbe\xb7\xe2\x5e\x2c\xfe\xdb\xb0\xd6\xef\x07\x7b\x58\x10\xbb\xd9\x6c\x36\xeb\x8a\x90\xfb\x16\xc7\x29\x66\xb7\x75\xd8\x35\x0b\x26\x83\x8f\xbb\xb6\xe3\xbe\x49\x52\x26\xad\x70\x0f\x70\x42\xe3\x54\x90\xb5\xa0\x11\xf1\x93\x38\x58\x0b\x92\x25\x81\x97\xc1\xe7\xe3\xae\xe3\x8e\x59\x1a\xfb\x52\x2e\xb5\x74\x42\x7d\x66\xb6\x39\xa8\xa8\x74\xa9\x15\xd9\x5e\xf3\xa2\x24\x1b\x70\xac\xb6\x31\x5b\x31\x9c\xa0\xdd\xbd\xd6\xf3\xfd\xd6\xfe\xbf\x27\x68\x45\xb1\xd0\x1b\x7e\x4d\xf1\xe5\x29\xc1\xbf\x60\x6f\x7f\x25\x7c\xb1\x9b\xda\x86\x95\xf4\xc0\xb7\x3c\x89\x6d\xa7\x48\x69\xfa\x75\x48\x15\xbb\xaa\x2d\xad\x99\x15\x33\xd9\xa7\xd9\x59\x21\xcb\xeb\x71\xa1\xcc\xad\xff\x3a\xce\x4f\x62\x2e\xc0\x9f\x63\xc6\x89\x90\xed\x07\x9e\xfa\x01\x99\x5d\xcd\xe9\x1f\x1f\xc3\x28\x4e\x16\x9f\x18\x17\xe9\xe7\xeb\x9b\xdb\x3f\x11\xec\x58\xb5\x1a\xea\xbc\xee\xf6\xbc\xc3\xa3\x37\xfd\xb7\xff\x39\x3e\x19\x9c\x9e\xfd\x3c\x1c\x8d\xcf\xdf\xfd\xf2\xeb\x6f\xbf\x37\x77\xf7\x9e\xef\xff\xfb\xe0\xc5\xcb\xff\x45\x96\x55\x9b\xca\x86\x25\xc2\x1f\x89\x9d\x7d\xfb\xaa\x25\x70\xcc\x18\x69\xd5\xcf\x4c\x55\x02\x9d\x5e\xd0\x4b\x68\x67\xa2\x5c\xac\x2a\x9a\x6c\x43\xcc\xaa\xe3\x5c\x96\x1a\x33\xad\xd9\xd4\x29\xe9\xab\x4d\xbb\xd6\x58\xcb\xc9\x64\x82\x62\x1c\x11\xf9\xdb\x02\xf9\xff\x07\x9a\x81\xc9\x04\xd5\x15\x1c\x5f\x99\xcd\xc5\xb1\xdb\xd3\xb5\x4a\xf5\x91\x8a\x80\x4f\xc5\xed\x83\xec\xf6\x9a\x39\xbb\xbb\xea\xb9\x99\x13\xb5\xa5\x73\xe4\x9f\x59\x2e\xad\x5a\x2a\x2d\x17\x93\x6b\xfb\x62\xf7\x40\x59\xd6\xb1\x6a\xef\xf3\x4f\x7a\x95\x28\x43\x82\x03\x3b\xbd\x68\x5d\xae\xfd\xa4\x37\x4c\xae\xdc\x33\x1c\x53\x3f\x8c\x6d\xd4\xc5\x71\x9c\x88\xfc\xc3\x65\x50\xfd\xbe\xa2\xe6\x7a\x8c\x25\xcc\x36\x4d\x5f\x7a\xf1\x52\x1e\x8f\xad\x7e\xff\x82\xe6\xcd\x7e\xd3\x81\x67\xd0\xbc\x79\x71\x28\x81\x07\x06\x78\x70\xa9\x16\x0f\x1d\xf8\x0b\xec\xe6\xcd\x3e\xbc\x7a\x05\xfb\x8e\x55\x53\x4a\xb4\xd5\xa7\xf4\xa3\x05\xa3\xb1\x98\xd9\xe8\x7f\x6e\x7e\x2c\xfc\x87\xea\x90\x5e\x34\x5b\xfb\x97\xf2\x77\xbf\x75\xa0\x7e\x0f\x5a\x2f\xd5\xef\xcb\xd6\x6e\x53\x5d\xec\x36\x95\x52\xf9\xbf\x2d\xf8\xbf\x00\x00\x00\xff\xff\x19\xf1\x70\x8a\x6e\x32\x00\x00")

func generateTxtBytes() ([]byte, error) {
	return bindataRead(
		_generateTxt,
		"generate.txt",
	)
}

func generateTxt() (*asset, error) {
	bytes, err := generateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generate.txt", size: 12910, mode: os.FileMode(420), modTime: time.Unix(1582940833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xc1\x8a\xdc\x30\x10\x44\xcf\xea\xaf\xa8\xd5\x49\x1a\x8c\x9d\x73\xc0\x97\x40\x36\x39\x24\x61\xc9\xe4\x07\x84\xa7\x65\x44\x64\xcb\x48\x32\x31\xcc\xcc\xbf\x07\xc9\x36\x84\xdc\xf6\x62\x8b\xa2\xaa\xba\x5f\x2f\x66\xf8\x6d\x46\xc6\x64\xdc\x4c\xe4\xa6\x25\xc4\x0c\x45\x42\x5a\x6f\x46\x49\x42\xfa\x50\x7f\x21\x95\x6f\xca\xd1\xcd\x63\x92\xa4\x89\xec\x3a\x0f\x35\xa6\x34\xee\x24\xf2\x96\xdf\x72\xc4\xc7\x1e\x25\xd9\x5e\xab\x53\xc9\xbc\x65\xd9\x40\x9a\xc5\xb5\xc7\x73\x0c\xc8\x3c\x2d\xde\x64\x86\x49\x28\x32\xac\xf3\x2c\x35\x89\xc5\x2d\xfc\x6f\xcb\xa7\x10\xbc\x92\x45\x95\x0d\xac\xf1\x89\x1b\xc8\x35\x31\x8a\x74\xc3\xc8\x33\x47\x93\x5d\x98\x4b\xb8\x26\xde\x4c\x4c\xac\x34\x09\x67\x71\x39\xeb\xee\xe8\xba\xc4\x19\xeb\x02\x1b\x22\xa6\x10\x19\x43\xb8\x31\x89\xb2\xf6\xab\xf3\x5c\x26\x1e\x70\xed\xaf\xf0\x2d\xfc\xe1\xa8\x2e\x3b\x92\x26\x51\xca\xd4\xe9\xec\x7b\x48\xa9\xf1\x78\x40\xbd\x9c\x91\xaf\x26\x5d\x57\x6b\xdd\x76\xba\x1a\xc8\xca\xab\xeb\x6d\x84\xf0\xa1\xac\x36\xbb\x41\xc9\x1f\x61\x67\x7e\x3d\x98\xc5\x93\x48\x88\x34\x35\xe0\x58\xc9\x7f\xb2\xb9\x5d\xbf\xab\x63\x6e\x11\x5f\x7a\xcc\xce\xff\xdf\xc4\x31\xee\x71\x21\x8a\xa9\xc7\x97\xfd\x1c\xac\x2e\xa5\xed\xd8\xe4\x3d\x35\x21\xb5\x9f\x37\x97\xd5\x07\x4d\xe2\x49\x00\xd0\x75\xf5\x58\x29\xaf\xd6\xb6\x6d\x4b\x4f\xfa\x1b\x00\x00\xff\xff\x5d\xc5\xaf\x2c\x31\x02\x00\x00")

func mainTxtBytes() ([]byte, error) {
	return bindataRead(
		_mainTxt,
		"main.txt",
	)
}

func mainTxt() (*asset, error) {
	bytes, err := mainTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.txt", size: 561, mode: os.FileMode(420), modTime: time.Unix(1581363047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlnameTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8e\x41\x6e\x83\x40\x0c\x45\xf7\x73\x0a\x5f\x00\xbc\x47\x4d\x97\x5d\x46\x91\x7a\x80\xca\x90\x9f\xc9\xb4\xd0\x19\x6c\x23\x91\x44\xdc\xbd\x22\x45\x5d\xb0\xac\x57\x96\xad\xf7\xdf\x67\x8e\xb9\x89\xf8\x86\x8a\x83\x68\x80\x8b\x94\x44\x95\x8d\xfd\xe1\xf1\xa0\xfa\x7d\xec\xdf\x52\x0f\x5a\x16\xa2\xca\x67\x3f\x48\x49\xb5\xcf\x1e\xfe\x03\x7e\x38\xcc\x37\xfa\x98\x1d\xa4\x18\xa7\xa4\xb0\x26\x30\xd3\x73\xae\xee\xc5\x1a\xe6\x98\xfc\x3a\xb5\x75\x97\x07\xc6\x7c\xbb\xdf\x6f\xbc\x19\x42\x91\xee\x4b\x22\x68\x95\x9c\xb6\x7d\x59\x42\x60\x6e\x71\xc9\x0a\xba\x24\x35\xa7\x98\x69\xb5\xad\xc9\x9d\x42\x1c\x93\x41\xa9\x3a\x51\x75\xfe\x45\x35\x7f\x1e\x65\x78\x16\x7c\x29\x62\xd6\xec\xcf\xaf\x7f\xe8\xb9\xdd\xff\xc2\x4f\x00\x00\x00\xff\xff\xe5\x96\x7b\x3d\x38\x01\x00\x00")

func sqlnameTxtBytes() ([]byte, error) {
	return bindataRead(
		_sqlnameTxt,
		"sqlname.txt",
	)
}

func sqlnameTxt() (*asset, error) {
	bytes, err := sqlnameTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlname.txt", size: 312, mode: os.FileMode(420), modTime: time.Unix(1582911461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlname2Txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\xc0\xe6\x6e\xd4\x1d\x3b\x06\x01\xfa\x01\x05\xed\x5c\x14\xb5\x76\x25\x53\x34\xe0\x24\xf0\xbf\x17\x4a\x8d\xa2\x68\x96\x2e\xd1\x24\x1e\x79\xb8\x77\xcc\x3e\x36\x1e\x9f\x50\x31\x10\xa5\x90\x40\x23\x4c\x24\x05\xaa\xca\xd4\x9a\xce\xa0\x2a\x4f\x43\x7b\xbd\x52\xfd\x3a\x0d\x2f\x61\x00\xad\x2b\x51\xd3\x50\x91\xf6\x1a\xdf\x77\x32\xde\xb4\xdf\x16\x5b\xac\x95\x14\x6a\x5b\xcc\x3d\x3e\xe6\xcd\x90\x6d\xcb\xda\x45\x03\x29\xa6\x39\x28\x72\xe3\x98\xe9\xf6\x4e\x66\x29\x37\xcc\x3e\xd8\x69\xee\xea\x3e\x8e\x8c\xe5\x7c\xb9\x9c\x79\x43\xf9\xc7\x65\x09\x76\x2e\x49\xff\x21\x1e\xdf\x5c\xdb\x7f\x5d\x9d\x63\xee\x70\x8c\x0a\x3a\x06\xcd\x46\x3e\x52\xa1\x2a\x04\xbd\x42\x0c\x73\x86\x52\xb5\xa7\xea\x70\x57\xe9\x29\x49\xce\x77\x4d\x9f\x7f\xac\x87\xee\xef\xee\x2b\x00\x00\xff\xff\x1a\x72\xca\x44\xbb\x01\x00\x00")

func sqlname2TxtBytes() ([]byte, error) {
	return bindataRead(
		_sqlname2Txt,
		"sqlname2.txt",
	)
}

func sqlname2Txt() (*asset, error) {
	bytes, err := sqlname2TxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlname2.txt", size: 443, mode: os.FileMode(420), modTime: time.Unix(1582911461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".DS_Store":         Ds_store,
	"api.txt":           apiTxt,
	"api_test.txt":      api_testTxt,
	"configlocaldb.txt": configlocaldbTxt,
	"generate.txt":      generateTxt,
	"main.txt":          mainTxt,
	"sqlname.txt":       sqlnameTxt,
	"sqlname2.txt":      sqlname2Txt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".DS_Store":         &bintree{Ds_store, map[string]*bintree{}},
	"api.txt":           &bintree{apiTxt, map[string]*bintree{}},
	"api_test.txt":      &bintree{api_testTxt, map[string]*bintree{}},
	"configlocaldb.txt": &bintree{configlocaldbTxt, map[string]*bintree{}},
	"generate.txt":      &bintree{generateTxt, map[string]*bintree{}},
	"main.txt":          &bintree{mainTxt, map[string]*bintree{}},
	"sqlname.txt":       &bintree{sqlnameTxt, map[string]*bintree{}},
	"sqlname2.txt":      &bintree{sqlname2Txt, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
